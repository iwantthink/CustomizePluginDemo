apply plugin: 'com.android.application'
apply plugin: 'com.hypers.GreetingPlugin'
gradle.taskGraph.whenReady {
    println "when ready $it"
}
gradle.buildFinished {
    println "build finished"
}

println 'app: project hashcode : ' + getProject().hashCode()
println 'app:root project hashcode : ' + getRootProject().hashCode()

buildscript {
    repositories {
        maven {
            url uri('../repo') //插件所在的目录
        }
    }

    dependencies {
        classpath 'com.hypers:GreetingPlugin:0.9' //添加依赖
    }

}

//greetingExt{
//    message 'from app123'
//}

PluginCfg {
    func {
        println 'hello: ' + it + '?'
    }
    address 'shanghai'
}


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    sourceSets {
        main {
            jniLibs.srcDirs 'src/main/jniLibs'
        }
    }

    defaultConfig {
        applicationId "com.hmt.analytics.customizeplugin"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        staging {

        }
    }

}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}

task getReleasePsw << {
    def psw = ''
    println 'getReleasePsw is running'
    if (rootProject.file('local.properties').exists()) {
        java.util.Properties properties = new Properties();
        properties.load(rootProject.file('local.properties').newDataInputStream())
        psw = properties.getProperty('release.psw')
    } else if (psw.trim().isEmpty()) {
        //TODO
        psw = java.lang.System.in.each {
        }
    }
}



tasks.getByName("assemble") {
    it.doLast {
        println "i am running after assemble"
    }
}
