println '===============settings.gradle================='
println "root project = " + getRootProject().hashCode()
println "in setting,gradle id is:" + getGradle().hashCode()
//哪个目录存储的gradle 可执行程序
println "in setting,gradleHomeDir is:" + getGradle().getGradleHomeDir()
//gradle 自己设置的目录，存储了一些配置文件，以及编译过程中的缓存文件，生成的类文件，编译中依赖的插件等
println "in setting,gradleUserHomeDir is:" + getGradle().getGradleUserHomeDir()
println "in setting,parent is:" + getGradle().getParent()
println '===============settings.gradle================='


def initExt() {
    //从local.properties 中获取属性 转换成对象
    Properties properties = new Properties();
    File propertyFile = new File(rootDir.getAbsolutePath() + "/local.properties")
    properties.load(propertyFile.newInputStream())
    //gradle 对象，默认就是Settings 和Project 的成员变量，可以直接获取
    //ext 前缀是必加的（仅仅在定义或设置他的时候使用） ，表明操作的是外置属性。api 只是一个 属性名，可以修改。。
    gradle.ext.api = properties.getProperty('sdk.dir')
    gradle.ext.hello = properties.getProperty('sdk.dir')
}

initExt()
//这样定义 应该是只能在当前project 中使用
ext {
    hi = 'hihihihihihi'
}
println hi
include ':app', ':greetplugin', ':apmplugin', ':apmagent'
